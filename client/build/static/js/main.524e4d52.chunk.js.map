{"version":3,"sources":["css/images/logo_eduLEAN.png","css/images/logo_ekopak.png","services/utils.js","components/common/confirmAlertInput.js","components/confirmAlertInputTask.jsx","services/httpService.js","services/userService.js","components/common/menuMainItem.js","components/common/menuItem.js","components/common/menuItems.js","components/showData_Header.jsx","services/localisationService.js","components/showData_SortingButtons.jsx","components/common/confirmAlert.js","components/logoutButtonBox.jsx","components/confirmAlertInputPartialDelivery.jsx","components/showData_Task.jsx","components/showData_TaskBox.jsx","components/common/loader.js","services/taskService.js","components/showData.jsx","services/taskToExcelService.js","components/settings_Header.jsx","components/common/linkWithButton.js","components/confirmAlertSettings.jsx","components/common/inputCustomSelect.js","components/common/customCheckBox.js","components/settings_Users.jsx","components/settings_Localisations.jsx","components/settings_User.jsx","components/common/ProtectedRoute.js","components/settings.jsx","components/advertising.jsx","components/home.jsx","components/selectLocalisation.jsx","services/authService.js","components/loginPage.jsx","components/noPermssions.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","utils","runFunctionAfterPressEnter","target","runFunction","charCode","getCustomTaskCss","path","customClassName","getDateFromTaskCreatedIn","date","slice","getTimeFromTaskCreatedIn","ConfirmAlertInput","state","handleInputOnChange","_ref","input","currentTarget","item","Object","objectSpread","_this","name","value","setState","validate","error","Joi","schema","details","message","p_label","type","placeholder","onClose","autoFocus","_this2","this","onchangeHandler","arguments","length","undefined","react_default","a","createElement","className","autoComplete","onChange","onKeyPress","doSubmit","label","action","btnStyle","onClick","Component","ConfirmAlertInput_task","content","string","max","required","errorMessages","location","createdBy","qty","submit","resetTaskData","confirmAlert","customUI","_this$props$form","props","form","title","p_label_2","renderInputBoxGroup","renderButton","button","addQtyToSchema","number","min","toast","axios","defaults","baseURL","process","interceptors","response","use","status","request","setTimeout","Promise","reject","httpService","get","post","put","patch","delete","setJwt","jwt","console","log","headers","common","apiEndPoint","jobNames","Operator","Magazynier","Prac. utrz. ruchu","Koordynator","Mistrz","Kierownik","Dyrektor","Prezes","Admin","SuperAdmin","_callee","isAdmin","data","regenerator_default","wrap","_context","prev","next","isCurrentUserGreaterThanORequalTo","sent","filter","u","job","sort","b","getUserJobValue","abrupt","stop","_callee2","user","_ref2","_context2","_id","_callee3","_ref3","_context3","_callee4","_ref4","_context4","_callee5","_ref5","_context5","_callee6","_context6","getUserFromJWT","localStorage","removeItem","isLogged","_callee7","_ref6","_context7","password","getItem","jwtDecode","jobName","userService","getUsers","_getUsers","apply","getUser","_x","_getUser","addUser","_x2","_addUser","updateUser","_x3","_updateUser","deleteUser","_x4","_deleteUser","logoutUser","_logoutUser","resetUserPassword","_x5","_resetUserPassword","getUserJobName","key","isCurrentUserLessThan","isCurrentUserLessThanORequalTo","isCurrentUserGreaterThan","isCurrentUserEqualTo","MenuMainItem","icon","Link","to","MenuItem","category","iconType","renderIcon","MenuItems","items","map","menuItem","ShowDataHeader","headerButtons","serviceModeButtons","form_confirmAlertInput_addTask","btn_css","onhandleAddTask","renderCustomForm","currentLocation","serviceMode","isSupervisor","getCustomServiceBtnStyle","serviceMode_jobName","onhandleChangeServiceModeJob","renderServiceModeButtons","confirmAlertInputTask","validLocations","onChangeCurrentLocation","toggle","onhandleChangeServiceMode","renderServiceModeMainButton","menuMainItem","menuItems","renderShowDataMenu","localisationsPriorityValues","Magazyn","Utrzymanie ruchu","Maszyna","getLocalisations","_getLocalisations","getLocalisationPriorityValue","t0","localisation","localisations","l","permissions","indexOf","endPoint","validLocalisations","vl","localisationCategory","localisationService","addLocalisation","_addLocalisation","updateLocalisation","_updateLocalisation","deleteLocalisation","_deleteLocalisation","getUserPermisions_fromJWT","getSelectedLocalisation","_getSelectedLocalisation","getVerifiedUserLocalisations","_getVerifiedUserLocalisations","SortingButtons","currentSortingStatus","deleteTaskMode","onChangeSortingStatus","onhandleChangeManagerkMode","onhandleChangeDeleteTaskMode","buttons","isManager","buttonPath","ConfirmAlert","_this$props","itemRepresentation","_this$props$form2","btn_label","_this$props$form2$isD","isDisabled","_this$props$disableBu","disableButton","disabled","LogoutButtonBox","form_confirmAlert","logout","window","index","render_pLabel","ConfirmAlertInputPartialDelivery","partialQty","errorMessage","inputValue","originalPartialQty","handleInputOnChange_partialDelivery","confirmGreaterDeliveryThanOrder","parseInt","task","Task","form_closeTask","onhandleCloseTask","form_deleteTask","onhandleDeleteTaskFromDataBase","form_partialDelivery","onhandlePartialDelivery","renderContent","column","Fragment","createdInFormatedData","renderTaskContent","statusCellStyle","isDone","renderTaskStatus","alreadyDelivered","renderQty","time","takedBy","renderTakedBy","confirmAlertInputPartialDelivery","renderDeliveryButton","getCustomForm","currentUserTakedThisTask","btnStyle_taskTaked","isDOne","fullText","shortText","onhandleTakeTask","columns","partialTime","taskCustomCSS","TaskBox","specialColumns","isServiceMode_jobName","getFilteredData_bySortingStatus","getFilterData_byLocation","getSortedData","filteredClumns","filteredColumns","concat","push","getFilteredColumns","invisibleText","isVisible","renderTaskBoxHeader","dist_index_esm","height","width","index_esm","itemData","itemCount","itemSize","style","showData_Task","renderTasks","Loader","taskToUpdate","taskService","getTasks","_getTasks","addTask","_addTask","updateTask","_updateTask","deleteteTask","_deleteteTask","ShowData","currentLocalisation","handleChangeDeleteTaskMode","handleChangeSortingStatus","handleChangeServiceMode","handleChangeServiceModeJob","handleChangeCurrentLocation","handleAddTask","newTask","updateTaskList","handleDeleteTaskFromDataBase","taskToDelete","handleCloseTask","arrayOfUpdateDetails","property","handleUpdateTask","handleTakeTask","handlePartialDelivery","forEach","t","toConsumableArray","findIndex","redirectIfNeeded","getCurrentLocalisation","set_Interval_ToRefreshData","mounted","clearInterval","run_interval_refreshData","setInterval","asyncToGenerator","mark","_callee8","_context8","t1","t2","call","match","params","id","_this3","localisationFromPathname","pathname","unshift","splice","_this$state2","showData_Header","loader","showData_SortingButtons","logoutButtonBox","showData_TaskBox","fileName","blob","getFileName","responseType","Blob","filesaver","saveAs","timeOnServer_GMT0","Date","getTime","timeOffset_Poland","toISOString","taskToExcelService","getTasksInExcelFile","_getTasksInExcelFile","getTaskInExcelFile","taskToExcellFileService","SettingsHeader","LinkWithButton","_ref$css","css","ConfirmAlertSettings","InputCustomSelect","options","currentValue","_ref$isDisabled","selectOptions","selectedOptions","option","CustomCheckBox","isChecked","faClass","SettingsUsers","classCallCheck","possibleConstructorReturn","getPrototypeOf","users","form_deleteUser","handleDeleteUser","form_resetPassword","handleResetPassword","form_addteUser","handleAddUser","userToDelete","newUser","validateNewUser","info","updateUserPermissions","userN","area","chamgeUserPermisions","_ref7","renderCellContent","renderInputCustomSelect","renderUserStatus","renderCheckBox","o","userPermissions","isDisbaled","customCheckBox","inputCustomSelect","checkDisabledOptions","confirmAlertSettings","mainDivCSS","contentCSS","wrapperCSS","linkWithButton","renderAddUserButton","renderHeader","renderUsers","SettingsLocalisations","handleDeleteLocalisation","form_addLocalisation","handleAddLocalisation","localisationToDelete","newLocalisation","_this$state","renderConfirmAlert","itemCSS","renderAddLocalisationButton","renderLocalisations","UserPage","pwd","newPassword","validateNewPassword","success","history","goBack","_userService$getUserF","userName","join","renderReturnButton","renderSettingsNavigationButtons","ProtectedRoute","requireUserLevel","redirectPath","component","render","rest","objectWithoutProperties","Redirect","accessDenied","Route","assign","Settings","settings_Header","Switch","common_ProtectedRoute","from","Advertising","src","logoEduLEAN","alt","logoEkopak","Home","advertising","SelectLocalisation","renderSelectLocalisationButtons","tokenKey","setItem","getJwt","authService","login","_login","LoginPage","isWaitingForSerwerResponse","handleLogin","_this$state$user","validateUser","runLoader","auth","redirectUserToNextPath","userLocalisations","mode","renderLoginBox","NoPermissions","App","ex","document","lib","Boolean","hostname","ReactDOM","BrowserRouter","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.524e4d52.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_eduLEAN.9308f86e.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_ekopak.a0b89b36.png\";","\r\nexport function runFunctionAfterPressEnter (target, runFunction){\r\n    if(target.charCode === 13)\r\n    runFunction();\r\n}\r\nexport function getDateFromTaskCreatedIn(date){\r\n    return date.slice(0,10);\r\n}\r\nexport function getTimeFromTaskCreatedIn(date){\r\n    return date.slice(11,19);\r\n}\r\n\r\nfunction getCustomTaskCss(path, customClassName){\r\n         if(path === \"#\") return \"task-box__\"+ customClassName + \"_index\";\r\n    else if(path === \"content\") return \"task-box__\"+ customClassName + \"_content\";\r\n    else if(path === \"status\") return \"task-box__\"+ customClassName + \"_status\";\r\n    else if(path === \"qty\") return \"task-box__\"+ customClassName + \"_qty\";\r\n    else if(path === \"partialQty\") return \"task-box__\"+ customClassName + \"_partialQty\";\r\n    else if(path === \"location\") return \"task-box__\"+ customClassName + \"_location\";\r\n    else if(path === \"time\") return \"task-box__\"+ customClassName + \"_time\";\r\n    else if(path === \"take\") return \"task-box__\"+ customClassName + \"_take\";\r\n    else if(path === \"btnClose\") return \"task-box__\"+ customClassName + \"_btnClose\";\r\n    else if(path === \"takedBy\") return \"task-box__\"+ customClassName + \"_takedBy\";\r\n    else if(path === \"createdInFormatedData\") return \"task-box__\"+ customClassName + \"_createdInFormatedData\";\r\n    else if(path === \"btnDelete\") return \"task-box__\"+ customClassName + \"_btnDelete\";\r\n    return ;\r\n}\r\nexport default {\r\n    runFunctionAfterPressEnter,\r\n    getCustomTaskCss,\r\n    getDateFromTaskCreatedIn,\r\n    getTimeFromTaskCreatedIn\r\n}","import React, { Component } from 'react';\r\nimport utils from '../../services/utils';\r\nimport Joi from 'joi-browser';\r\n\r\nclass ConfirmAlertInput extends Component {\r\n    state = { }\r\n\r\n    handleInputOnChange = ({ currentTarget: input }) => {\r\n        const item = {...this.state.item};\r\n              item[input.name] = input.value;\r\n        this.setState({ item })\r\n    };\r\n\r\n    renderInputBoxGroup(p_label, name, type, placeholder, onClose, autoFocus, onchangeHandler =  this.handleInputOnChange){\r\n      return <div className=\"confirmAlertInput__input-box_group\">\r\n                  <p>{p_label}</p>\r\n                  <input name= { name }\r\n                          type= { type }\r\n                          placeholder={ placeholder }\r\n                          autoComplete=\"off\"\r\n                          autoFocus={ autoFocus }\r\n                          onChange={ onchangeHandler }\r\n                          onKeyPress={ (target) => utils.runFunctionAfterPressEnter(target, () => this.doSubmit(onClose)) } //\r\n                  ></input>\r\n              </div>\r\n    }\r\n    renderButton(label, action, btnStyle){\r\n      return <button className={btnStyle} onClick={ action }>{label}</button>\r\n    }\r\n    validate = (item) => {\r\n      const { error } = Joi.validate(item, this.schema);\r\n      return error ? error.details[0].message : null;\r\n  };\r\n}\r\n\r\nexport default ConfirmAlertInput;","import React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport Joi from 'joi-browser';\r\nimport ConfirmAlertInput from './common/confirmAlertInput.js';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass ConfirmAlertInput_task extends ConfirmAlertInput {\r\n    state = {};\r\n    schema = {\r\n        content: Joi.string().max(40).required().error( () => {return { message: this.errorMessages[\"content\"]};}),\r\n        type: Joi.string().required(),\r\n        location: Joi.string(),\r\n        createdBy: Joi.string()\r\n    };\r\n    errorMessages = {\r\n        content: 'Treść zdarzenia nie może być pusta i może mieć maks. 40 znaków.',\r\n        qty: 'Pole \"Ilość\" nie może być puste a wartość być liczbą z zakresu 1 - 9999.'\r\n    }\r\n    componentDidMount(){\r\n        const item = {\r\n          content: this.props.form.content,\r\n          type: this.props.button.type,\r\n        }\r\n        if(this.props.button.type === \"order\"){\r\n          this.addQtyToSchema();\r\n          item.qty = null;\r\n        }\r\n        this.setState({ item })\r\n    }\r\n    addQtyToSchema(){\r\n        return this.schema.qty = Joi.number().min(1).max(9999).required().error( () => {return { message: this.errorMessages[\"qty\"] };});\r\n    }\r\n    resetTaskData(){\r\n      let item = { ...this.state.item };\r\n      item.content = this.props.form.content;\r\n        if(this.props.button.type === \"order\"){\r\n          item.qty = \"\";\r\n        }\r\n      this.setState({ item })\r\n    }\r\n    doSubmit(onClose){\r\n        const {item} = this.state;\r\n        const error = this.validate(item);\r\n        if(error) { toast.error(error); return null; }\r\n        this.props.form.action(item);\r\n        onClose();\r\n    }\r\n    submit = () => {\r\n      this.resetTaskData();\r\n      confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n              const { title, content, p_label, p_label_2 } = this.props.form;\r\n              return (\r\n                <div className=\"confirmAlertInput\">\r\n                  <h1>{title}</h1>\r\n                  <div className=\"confirmAlertInput__input-box\">\r\n                    {this.renderInputBoxGroup(p_label, \"content\", \"text\", content, onClose, \"autoFocus\")}\r\n                    { p_label_2 &&  this.renderInputBoxGroup(p_label_2, \"qty\", \"number\", \"Podaj ilość\", onClose) }\r\n                  </div>\r\n                  <div className=\"confirmAlertInput__button-group\">\r\n                    {this.renderButton(\"Dodaj\", () => this.doSubmit(onClose) ) }\r\n                    {this.renderButton(\"Anuluj\", onClose ) }\r\n                  </div>\r\n                </div>\r\n              )\r\n            } })\r\n      };\r\n    \r\n      render() { \r\n          return ( \r\n                <div className=\"app__header_headerButtons-wrap\">\r\n                  {this.renderButton(this.props.button.label, this.submit, \"btn btn-secondary\" ) }\r\n                </div>\r\n              );\r\n    }\r\n}\r\n\r\nexport default ConfirmAlertInput_task;","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n// import authService from './authService';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n// axios.defaults.headers.common['x-auth-token'] = authService.getJwt();\r\n\r\naxios.interceptors.response.use(null, error => {\r\n    const expectedError = error.response && error.response.status >= 400 && error.request.status < 500;\r\n    if(!expectedError){\r\n      toast.error(\"Brak połączenia z serwerem.\")\r\n      setTimeout( () => toast.error(\"Sprawdź czy masz dostęp do internetu.\"), 2500);\r\n      setTimeout( () => toast.error(\"Jeżeli internet działa, powiadom administratora programu o problemie.\"), 5000);\r\n  }\r\n  return Promise.reject(error)\r\n})\r\n\r\nfunction setJwt(jwt){\r\n  console.log(jwt, 'jwt')\r\n  axios.defaults.headers.common['x-auth-token'] = jwt;\r\n}\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  patch: axios.patch,\r\n  delete: axios.delete,\r\n  setJwt\r\n}","import httpService from \"./httpService\";\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst apiEndPoint = \"/users\";\r\n\r\nconst jobNames = {\r\n    \"Operator\": 1,\r\n    \"Magazynier\": 2,\r\n    \"Prac. utrz. ruchu\": 3,\r\n    \"Koordynator\": 10,\r\n    \"Mistrz\": 11,\r\n    \"Kierownik\": 12,\r\n    \"Dyrektor\": 13,\r\n    \"Prezes\": 14,\r\n    \"Admin\": 100,\r\n    \"SuperAdmin\": 1000\r\n}\r\n\r\nexport async function getUsers(){\r\n        const isAdmin = isCurrentUserGreaterThanORequalTo(\"Admin\");\r\n        let { data } = await httpService.get(apiEndPoint);\r\n        data = isAdmin ? data : data.filter( u => u.job !== \"Admin\" && u.job !== \"SuperAdmin\" ) // nie pokazuj użytkowników, którzy mają większe uprawnienia\r\n        data = data.sort( (a,b) => getUserJobValue(b.job) - getUserJobValue(a.job) ) // sortuj tak, aby wyświetlać zgodnie z hierarchią\r\n        return data;\r\n}\r\nexport async function getUser(user){\r\n    const { data } = await httpService.get(apiEndPoint + \"/\" + user._id );\r\n    return data;\r\n}\r\nexport async function addUser(user){\r\n    const { data } = await httpService.post(apiEndPoint, user);\r\n    return data;\r\n}\r\nexport async function updateUser(user){\r\n    const { data } = await httpService.put(apiEndPoint + \"/\" + user._id, user );\r\n    return data;\r\n}\r\nexport async function deleteUser(user){\r\n    const { data } = await httpService.delete(apiEndPoint + \"/\" + user._id );\r\n    return data;\r\n}\r\nexport async function logoutUser(){\r\n    const user = getUserFromJWT();\r\n    localStorage.removeItem(\"token\");\r\n    await httpService.patch(apiEndPoint + \"/\" + user._id, {isLogged: false} );\r\n}\r\nexport async function resetUserPassword(user){\r\n    const { data } = await httpService.patch(\"/resetPassword/\" + user._id, {password: user.password} );\r\n    return data;\r\n}\r\n\r\n// funkcje przetwarzające dane\r\nexport function getUserFromJWT(){\r\n    const jwt = localStorage.getItem(\"token\");\r\n    return jwt ? jwtDecode(jwt) : undefined;\r\n}\r\nexport function isCurrentUserGreaterThanORequalTo(jobName){ // zmienic na required\r\n    const currentUserJob = getUserFromJWT().job;\r\n    return getUserJobValue(currentUserJob) >= jobNames[jobName];\r\n}\r\nexport function isCurrentUserLessThan(jobName){\r\n    const currentUserJob = getUserFromJWT().job;\r\n    return getUserJobValue(currentUserJob) < jobNames[jobName];\r\n}\r\nexport function isCurrentUserLessThanORequalTo(jobName){\r\n    const currentUserJob = getUserFromJWT().job;\r\n    return getUserJobValue(currentUserJob) <= jobNames[jobName];\r\n}\r\nexport function isCurrentUserGreaterThan(jobName){\r\n    const currentUserJob = getUserFromJWT().job;\r\n    return getUserJobValue(currentUserJob) > jobNames[jobName];\r\n}\r\nexport function isCurrentUserEqualTo(jobName){\r\n    const currentUserJob = getUserFromJWT().job;\r\n    return getUserJobValue(currentUserJob) === jobNames[jobName];\r\n}\r\nexport function getUserJobValue(jobName){\r\n    return  jobNames[jobName]\r\n}\r\nexport function getUserJobName(user){\r\n    for( let key in jobNames ){\r\n        if(jobNames[key] === user.job) return key;\r\n    }\r\n}\r\nexport default {\r\n    getUsers,\r\n    getUser,\r\n    addUser,\r\n    updateUser,\r\n    deleteUser,\r\n    logoutUser,\r\n    resetUserPassword,\r\n    getUserFromJWT,\r\n    getUserJobName,\r\n    getUserJobValue,\r\n    isCurrentUserLessThan,\r\n    isCurrentUserLessThanORequalTo,\r\n    isCurrentUserGreaterThan,\r\n    isCurrentUserGreaterThanORequalTo,\r\n    isCurrentUserEqualTo\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MenuMainItem = ({label, path, icon}) => {\r\n    return ( \r\n        <Link to={path}>\r\n            <li className=\"app__header-menu_item app__header-menu_item-main\">\r\n                <i className={\"fa fas \" + icon}></i>\r\n                <p>{label}</p>\r\n            </li>\r\n        </Link>\r\n     );\r\n}\r\n \r\nexport default MenuMainItem;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MenuItem = ({item, action}) => {\r\n    function renderIcon(){\r\n        let iconType;\r\n        if( item.category === \"Magazyn\") iconType = \"cubes\";\r\n        else if( item.category === \"Maszyna\") iconType = \"cubes invisible\";\r\n        else if( item.category === \"Utrzymanie ruchu\") iconType = \"wrench\";\r\n        return <i className={ \"fa fas fa-\" + iconType }></i>;\r\n    }\r\n    return ( \r\n        <Link to={ item.path } >\r\n            \r\n            <li className=\"app__header-menu_item\" onClick={action} >\r\n                { item.category && renderIcon() }\r\n                { item.name || item.label }\r\n            </li>\r\n        </Link>\r\n     );\r\n}\r\n \r\nexport default MenuItem;","import React from 'react';\r\nimport MenuItem from './menuItem.js';\r\n\r\nconst MenuItems = ({ items, action }) => {\r\n    return items.map( item => \r\n                <MenuItem key={item.name || item.label}\r\n                          item={item}\r\n                          action={() => action(item)} /> )\r\n}\r\n \r\nexport default MenuItems;","import React from 'react';\r\nimport ConfirmAlertInputTask from './confirmAlertInputTask';\r\nimport userService from '../services/userService';\r\nimport MenuMainItem from './common/menuMainItem.js';\r\nimport MenuItems from './common/menuItems.js';\r\n\r\nconst ShowDataHeader = (props) => {\r\n\r\n    const headerButtons = [\r\n        {label: \"Zamów formatkę\", type: \"order\"},\r\n        {label: \"Odbiór palet\", type: \"orderTakeout\"},\r\n        {label: \"Awaria\", type: \"breakdown\"},\r\n        {label: \"Przezbrojenie\", type: \"modelChange\"},\r\n        {label: \"Czyszczenie\", type: \"cleaning\"}\r\n    ];\r\n    const serviceModeButtons = [\r\n       \"Operator\",\r\n       \"Magazynier\",\r\n       \"Prac. utrz. ruchu\",\r\n       \"Koordynator\",\r\n       \"Mistrz\",\r\n       \"Kierownik\",\r\n       \"Dyrektor\",\r\n       \"Prezes\",\r\n       \"Admin\",\r\n       \"SuperAdmin\"\r\n    ]\r\n    const form_confirmAlertInput_addTask = {\r\n        title: \"Dodaj zdarzenie\",\r\n        p_label: \"Treść\",\r\n        btn_css: \"btn btn-success btn-sm\",\r\n        action: (item) => props.onhandleAddTask(item),\r\n     };\r\n\r\n    function renderCustomForm(button){\r\n        let form = { ...form_confirmAlertInput_addTask };\r\n        form.content = button.label === \"Zamów formatkę\" ? \"\" : button.label;\r\n        form.p_label_2 = button.type === \"order\" ? \"Ilość\" : \"\";\r\n        return  form;\r\n    };\r\n\r\n    function renderShowDataMenu(){\r\n        const { validLocations, onChangeCurrentLocation } = props;\r\n        const isAdmin = userService.isCurrentUserGreaterThanORequalTo(\"Admin\");\r\n        return <div className=\"app__header-barIcon\" >\r\n                    <i className=\"fa far fa-bars fa-3x\"></i>\r\n                    <ul className=\"app__header-menu\">\r\n                        {isAdmin && renderServiceModeMainButton() }\r\n                        <MenuMainItem label=\"Ustawienia\" path=\"/settings/\" icon=\"fa-cog\" />\r\n                        <MenuItems items={validLocations} action={ onChangeCurrentLocation }/>\r\n                    </ul>\r\n                </div>\r\n    };\r\n    function renderServiceModeMainButton(){\r\n        const toggle = props.serviceMode ? \"fa fa-toggle-on\" : \"fa fa-toggle-off\";\r\n        return <li className=\"app__header-menu_item\" onClick={ () => props.onhandleChangeServiceMode() } >\r\n                    <i className={toggle}></i>\r\n                    Tryb testu widoków\r\n                </li>\r\n    }\r\n    function renderAddTaskButtons(){\r\n        return <div className=\"app__header_header-buttons-wrapper\">\r\n                    <i className=\"fa fas fa-cart-arrow-down\"></i>\r\n                    <div className=\"app__header_headerButtons\">\r\n                        { headerButtons.map( button => \r\n                            <ConfirmAlertInputTask \r\n                                    key={button.label}\r\n                                    button={button}\r\n                                    form={ renderCustomForm(button) }\r\n                                    />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n    };\r\n    function renderServiceModeButtons(){\r\n        function getCustomServiceBtnStyle(button){\r\n                return button === props.serviceMode_jobName ? \"btn btn-light btn-sm\" : \"btn btn-outline-light btn-sm\"; \r\n        }\r\n        return <div className=\"app__header_header-buttons-wrapper-service\">\r\n                    <i className=\"fa fas fa-cogs\"></i>\r\n                    <div className=\"app__header_headerButtons-service\">\r\n                        { serviceModeButtons.map( button => \r\n                            <button key={button} className={getCustomServiceBtnStyle(button)} onClick={ () => props.onhandleChangeServiceModeJob(button)}>{button}</button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n    };\r\n\r\n    const { currentLocation, serviceMode } = props;\r\n    const isSupervisor = userService.isCurrentUserGreaterThanORequalTo(\"Koordynator\");\r\n    return ( \r\n        <header className=\"app__header\">\r\n            { serviceMode && renderServiceModeButtons() }\r\n            { currentLocation.category === \"Maszyna\" && renderAddTaskButtons() }\r\n            <div className=\"app__header_title-barIcon-wrapper\">\r\n                <div className=\"app__header-title\">{currentLocation.name}</div>\r\n                { isSupervisor && renderShowDataMenu() }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n \r\nexport default ShowDataHeader;","import httpService from \"./httpService\";\r\nimport jwtDecode from 'jwt-decode';\r\nimport userService from '../services/userService';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst apiEndPoint = \"/localisations\";\r\n\r\nconst localisationsPriorityValues = {\r\n    \"Magazyn\": 3,\r\n    \"Utrzymanie ruchu\": 2,\r\n    \"Maszyna\": 1\r\n};\r\n\r\nexport async function getLocalisations(){\r\n    try{\r\n        let { data } = await httpService.get(apiEndPoint);\r\n        return data.sort( (a,b) => getLocalisationPriorityValue(b.category) - getLocalisationPriorityValue(a.category) );\r\n    }catch(ex){\r\n        toast.error(\"Nie można uzyskać danych o lokalizacjach.\")\r\n    }\r\n}\r\nexport async function addLocalisation(localisation){\r\n    const { data } = await httpService.post(apiEndPoint, localisation);\r\n    return data;\r\n}\r\nexport async function updateLocalisation(localisation){\r\n    const { data } = await httpService.put(apiEndPoint + \"/\" + localisation._id, localisation );\r\n    return data;\r\n}\r\nexport async function deleteLocalisation(localisation){\r\n    const { data } = await httpService.delete(apiEndPoint + \"/\" + localisation._id );\r\n    return data;\r\n}\r\n\r\nexport function getUserPermisions_fromJWT(){ // wyrzucić ?\r\n        const jwt = localStorage.getItem(\"token\");\r\n        return jwtDecode(jwt).permissions;\r\n}\r\n\r\nexport async function getVerifiedUserLocalisations(){\r\n    const user = userService.getUserFromJWT();\r\n    const localisations = await getLocalisations();\r\n    return localisations.filter( l => user.permissions.indexOf( l.category ) >= 0 )\r\n}\r\n\r\nexport async function getSelectedLocalisation(endPoint){\r\n    const validLocalisations = userService.getUserFromJWT().validLocalisations;\r\n        return endPoint ? validLocalisations.filter( vl => vl.name === endPoint )[0] : null;\r\n\r\n}\r\nexport function getLocalisationPriorityValue(localisationCategory){\r\n    return localisationsPriorityValues[localisationCategory]\r\n}\r\n\r\nexport default {\r\n    getLocalisations,\r\n    addLocalisation,\r\n    updateLocalisation,\r\n    deleteLocalisation,\r\n    getUserPermisions_fromJWT,\r\n    getSelectedLocalisation,\r\n    getLocalisationPriorityValue,\r\n    getVerifiedUserLocalisations\r\n}","import React from 'react';\r\nimport userService from '../services/userService';\r\n\r\nconst SortingButtons = ({ currentSortingStatus, deleteTaskMode, onChangeSortingStatus, onhandleChangeDeleteTaskMode: onhandleChangeManagerkMode }) => {\r\n \r\n    const buttons = [\r\n        {label: \"W trakcie\", path: false },\r\n        {label: \"Zakończone\", path: true },\r\n        {label: \"Wszystkie\", path: \"All\" }\r\n    ];\r\n    \r\n    function getSortingButtonCustomStyles(buttonPath){\r\n        return (buttonPath === currentSortingStatus ? \"btn-secondary\" : \"btn-outline-secondary\") + \"  btn btn-sm sorting-buttons-box_sortingButton\";\r\n    };\r\n    function getManagerModeButtonStyle(buttonPath){\r\n        return (deleteTaskMode ? \"btn-danger\" : \"btn-outline-danger\") + \"  btn btn-sm sorting-buttons-box_managerModeButton\";\r\n    };\r\n    \r\n    function renderSortingButtons(){\r\n        return buttons.map( button => \r\n                    <button key={button.label}\r\n                            className={getSortingButtonCustomStyles(button.path)}\r\n                            onClick={ () => onChangeSortingStatus(button.path) }\r\n                            >{button.label}\r\n                    </button>\r\n                )\r\n    };\r\n    function renderManagerModeButton(){\r\n        return <button className={ getManagerModeButtonStyle() } onClick={ onhandleChangeManagerkMode }>Tryb zarządzania</button>\r\n    }\r\n    const isManager = userService.isCurrentUserGreaterThanORequalTo(\"Kierownik\");\r\n    return ( \r\n        <div className=\"sorting-buttons-box\">\r\n            <p className=\"sorting-buttons-box_paragraph\">Pokaż zdarzenia:</p>\r\n            { renderSortingButtons() }\r\n            { isManager && renderManagerModeButton() }\r\n        </div>\r\n        );\r\n}\r\nexport default SortingButtons;","import React, { Component } from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\n\r\nclass ConfirmAlert extends Component {\r\n    state = {  }\r\n\r\n    submit = () => {\r\n        const { item, itemRepresentation } = this.props;\r\n        const { title, action } = this.props.form;\r\n\r\n        confirmAlert({\r\n          title: title,\r\n          message: this.props.form.message || itemRepresentation,\r\n          buttons: [\r\n            {\r\n              label: 'Potwierdzam',\r\n              onClick: () => action(item)\r\n            },\r\n            {\r\n              label: 'Anuluj',\r\n              onClick: () =>{ return null }\r\n            }\r\n          ]\r\n        })\r\n      };\r\n    \r\n      render() { \r\n        const { btn_label, btn_css, isDisabled = false } = this.props.form;\r\n        const { disableButton = false } = this.props;\r\n        if(isDisabled) return <button className={\"btn \" + btn_css} >{btn_label} </button>;\r\n        return ( \r\n                <button \r\n                    className={\"btn \" + btn_css}\r\n                    onClick={this.submit}\r\n                    disabled = { disableButton }\r\n                    >{btn_label}\r\n                </button>\r\n            );\r\n\r\n    }\r\n}\r\n\r\nexport default ConfirmAlert;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport ConfirmAlert from './common/confirmAlert.js';\r\nimport userService from '../services/userService';\r\nimport { toast } from 'react-toastify';\r\nclass LogoutButtonBox extends Component {\r\n    state = { \r\n        user: {\r\n            name: \"\",\r\n            password: \"\"\r\n        },\r\n    }\r\n    form_confirmAlert = {\r\n        title: \"Wylogowanie\",\r\n        btn_label: <i className=\"fa fas fa-sign-out\"></i>,\r\n        btn_css: \"btn btn-outline-secondary btn-sm\",\r\n        action: () =>this.logout()\r\n    };\r\n\r\n    componentDidMount(){\r\n        const user = userService.getUserFromJWT();\r\n        this.setState({ user });\r\n    }\r\n    \r\n    logout =  async () => {\r\n        try{\r\n            await userService.logoutUser();\r\n            window.location = \"/\";\r\n        }catch (ex){\r\n            toast.error(\"Nie udało się poprawnie wylogować\");\r\n        }\r\n        \r\n    };\r\n\r\n    handleInputOnChange = ({ currentTarget: input }) => {\r\n        const user = {...this.state.user};\r\n        user[input.name] = input.value;\r\n        this.setState({ user })\r\n    };\r\n\r\n    render_pLabel(){\r\n        const { name } = this.state.user;\r\n        const index = name.indexOf(\" \") - 1;\r\n        if(name[index] === \"a\") return \"Jesteś zalogowana jako:\";\r\n        return \"Jesteś zalogowany jako:\"\r\n    };\r\n    \r\n    render() { \r\n        const { user } = this.state;\r\n        return (\r\n            <div className=\"logout-button-box\">\r\n                <div className=\"logout-button-box__info\">\r\n                    <p>{this.render_pLabel()}</p>\r\n                    <Link to=\"/settings/user\">\r\n                        <p>{user.name}</p>\r\n                    </Link>\r\n                </div>\r\n                <ConfirmAlert \r\n                        item={user}\r\n                        itemRepresentation=\"Czy chcesz się wylogować?\"\r\n                        form = {this.form_confirmAlert}\r\n                        />\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default LogoutButtonBox;","import React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport Joi from 'joi-browser';\r\nimport ConfirmAlertInput from './common/confirmAlertInput.js';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass ConfirmAlertInputPartialDelivery extends ConfirmAlertInput {\r\n    state = {\r\n      \r\n    };\r\n    schema = { partialQty: Joi.number().min(1).max(9999).required().error( () => {return { message: this.errorMessage }; }) }\r\n    inputValue = 0;\r\n    originalPartialQty = 0;\r\n    errorMessage = \"Podana ilość musi być określona jako liczba i mieścić się w zakresie 1-9999.\";\r\n    componentDidMount(){\r\n      this.originalPartialQty = this.props.task.partialQty;\r\n      this.setState({ item: this.props.task })\r\n    };\r\n    handleInputOnChange_partialDelivery = ({ currentTarget: input }) => {\r\n      this.inputValue = input.value;\r\n    };\r\n    resetTaskData(){\r\n      this.inputValue = 0;\r\n    }\r\n    doSubmit(onClose){\r\n      const {item} = this.state;\r\n      const error = this.validate({partialQty: this.inputValue});\r\n      if(error) { toast.error(error); return null; }\r\n      \r\n      onClose();\r\n      if(item.qty < item.partialQty + parseInt(this.inputValue)) {\r\n        this.confirmGreaterDeliveryThanOrder(item);\r\n      }\r\n      else {\r\n        item.partialQty += parseInt(this.inputValue);\r\n        this.props.form.action(item);\r\n      }\r\n    }\r\n    confirmGreaterDeliveryThanOrder = (item) => {\r\n      confirmAlert({\r\n        title: \"Ostrzeżenie!\",\r\n        message: \"Łączna dostawa będzie większa niż zamówienie. Zatwierdź dostawę lub ją odrzuć.\",\r\n        buttons: [\r\n          {\r\n            label: 'Zatwierdzam',\r\n            onClick: () => { item.partialQty += parseInt(this.inputValue); this.props.form.action(item) }\r\n          },\r\n          {\r\n            label: 'Odrzucam',\r\n            onClick: () =>{ return }\r\n          }\r\n        ]\r\n      })\r\n    };\r\n    submit = () => {\r\n      this.resetTaskData();\r\n      confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n              const { title } = this.props.form;\r\n              return (\r\n                <div className=\"confirmAlertInput\">\r\n                  <h1>{title}</h1>\r\n                  <div className=\"confirmAlertInput__input-box\">\r\n                    { this.renderInputBoxGroup(\"Ilość\", \"partialQty\", \"number\", \"Podaj ilość jaką teraz dostarczasz\", onClose, \"autoFocus\", this.handleInputOnChange_partialDelivery) }\r\n                  </div>\r\n                  <div>\r\n                    <p>* Podana wartość zostanie dodana do sumy zrealizowanej dostawy.</p>\r\n                  </div>\r\n                  <div className=\"confirmAlertInput__button-group\">\r\n                    { this.renderButton(\"Dodaj\", () => this.doSubmit(onClose) ) }\r\n                    { this.renderButton(\"Anuluj\", onClose ) }\r\n                  </div>\r\n                </div>\r\n              )\r\n            } })\r\n    };\r\n    \r\n    render() { \r\n        return ( \r\n              <button \r\n                className={ this.props.form.btn_css }\r\n                onClick={this.submit}\r\n                >{this.props.form.btn_label}\r\n            </button>\r\n            );\r\n    }\r\n}\r\n\r\nexport default ConfirmAlertInputPartialDelivery;","import React from 'react';\r\nimport ConfirmAlert from './common/confirmAlert.js';\r\nimport userService from '../services/userService';\r\nimport utils from '../services/utils';\r\nimport ConfirmAlertInputPartialDelivery from './confirmAlertInputPartialDelivery';\r\n\r\nconst Task = (props) => {\r\n\r\n    const form_closeTask = {\r\n        title: \"Potwierdź zakończenie zdarzenia\",\r\n        btn_label: <p><span className=\"task-box_btn-label_full\">Zakończ</span><span className=\"task-box_btn-label_short\">Z</span></p>,\r\n        btn_css: \"btn-danger btn-sm\",\r\n        action: (task) => props.onhandleCloseTask(task)\r\n    };\r\n    const form_deleteTask = {\r\n        title: \"Potwierdź usunięcie zdarzenia z rejestru\",\r\n        btn_label: <p><span className=\"task-box_btn-label_full\">Usuń</span><span className=\"task-box_btn-label_short\">X</span></p>,\r\n        btn_css: \"btn-outline-danger btn-sm\",\r\n        action: (task) => props.onhandleDeleteTaskFromDataBase(task)\r\n    };\r\n    const form_partialDelivery = {\r\n        title: \"Zarejestruj bierzącą dostawę\",\r\n        btn_label: <p><span className=\"task-box_btn-label_full\">Dostawa</span><span className=\"task-box_btn-label_short\">D</span></p>,\r\n        btn_css: \"btn-primary btn-sm\",\r\n        action: (task) => props.onhandlePartialDelivery(task)\r\n    };\r\n    // render functions\r\n    function renderTaskStatus(task){\r\n        const statusCellStyle = task.isDone ? \"status_dot-ok\" : \"status_dot-ng\";\r\n        return <div className={ statusCellStyle }></div>\r\n    }\r\n    function renderButton(task, form){\r\n        return <ConfirmAlert item ={task} itemRepresentation={task.content} form={form} />\r\n    };\r\n    function renderDeliveryButton(task){\r\n        return <ConfirmAlertInputPartialDelivery task={task} form={form_partialDelivery} />\r\n    };\r\n    function renderQty(task){\r\n        const alreadyDelivered = task.partialQty ? task.partialQty : 0;\r\n        return  <React.Fragment>\r\n                    <div className=\"task-box__task_qty-main\">{ task.qty }</div>\r\n                    { !task.isDone && <div className=\"task-box__task_qty-partialDelivery\">({ alreadyDelivered })</div> }\r\n                </React.Fragment>\r\n    };\r\n    function renderTaskContent(task){\r\n        // function getServiceMode(){\r\n        //     if(userService.getUserJobValue(props.serviceMode_jobName) >= 10) return false;\r\n        //     return true;\r\n        // }\r\n        // const isRenderTooltip = props.serviceMode ? getServiceMode() : userService.isCurrentUserLessThan(\"Koordynator\");\r\n        // const content = task.takedBy ? task.takedBy : \"Nie przypisano osoby\";\r\n\r\n        return  <React.Fragment>\r\n                    <div className=\"task-box__task_content-text\">{ task.content }</div>\r\n                    <div className=\"task-box__task_content-createdInFormatedData\">{ task.createdInFormatedData }</div>\r\n                    {/* { (task.type === \"order\" || task.type === \"orderTakeout\") && isRenderTooltip && <p className=\"task-box__tooltip\">{content}</p> } */}\r\n                </React.Fragment>\r\n    }\r\n    function renderContent (task, column, index) {\r\n             if(column.path === \"#\") return index;\r\n        else if(column.path === \"content\") return renderTaskContent(task);\r\n        else if(column.path === \"status\") return renderTaskStatus(task);\r\n        else if(column.path === \"qty\") return task.type === \"order\" ? renderQty(task) : \"\";\r\n        else if(column.path === \"partialQty\") return task.type === \"order\" ? task.partialQty : \"\";\r\n        else if(column.path === \"location\") return task.location;\r\n        else if(column.path === \"time\") return task.time >= 1400 ? \"24h+\" : task.time;\r\n        else if(column.path === \"takedBy\") return renderTakedBy(task);\r\n        else if(column.path === \"btnClose\" && !task.isDone ) return renderButton(task, form_closeTask);\r\n        else if(column.path === \"take\" && !task.isDone){\r\n                if(task.type === \"order\" && task.takedBy === userService.getUserFromJWT().name) return renderDeliveryButton(task);\r\n           else if(task.type === \"order\" || task.type === \"orderTakeout\" ) return renderButton(task, getCustomForm(task));\r\n        }\r\n        else if(column.path === \"createdInFormatedData\") return task.createdInFormatedData ;\r\n        else if(column.path === \"btnDelete\") return renderButton(task, form_deleteTask) ;\r\n    };\r\n    function renderTakedBy(task){\r\n        return task.type === \"order\" || task.type === \"orderTakeout\" ? (task.takedBy ? task.takedBy : \"?\" ) : task.createdBy;\r\n    }\r\n    // service\r\n    function getCustomForm(item){\r\n        const currentUserTakedThisTask = task.takedBy === userService.getUserFromJWT().name;\r\n        const btnStyle_taskTaked = currentUserTakedThisTask && !task.isDOne ? \"btn-primary btn-sm\" : \"btn-outline-secondary btn-sm\";\r\n        const fullText = currentUserTakedThisTask ? \"Obsługujesz\" : (item.takedBy ? \"Przejmij\" : \"Bierz zlecenie\");\r\n        const shortText =  currentUserTakedThisTask ? \"T\" : (item.takedBy ? \"P\" : \"B\");\r\n        const title = !task.takedBy ? \"Potwierdź przyjęcie zlecenia\" : (task.takedBy !== userService.getUserFromJWT().name ? \"Potwierdź przejęcie zlecenia\" : \"\"); \r\n        const btn_label = <div><span className=\"task-box_btn-label_full\">{ fullText }</span><span className=\"task-box_btn-label_short\">{ shortText }</span></div>;\r\n        const btn_css = item.takedBy ? btnStyle_taskTaked : \"btn-warning btn-sm\";\r\n        return {\r\n                title: title,\r\n                btn_label: btn_label,\r\n                btn_css: btn_css,\r\n                isDisabled: currentUserTakedThisTask,\r\n                action: (task) => props.onhandleTakeTask(task)\r\n               };\r\n    };\r\n    function taskCustomCSS(task){\r\n             if( task.isDone ) return \"task-box__task-color_ok\";\r\n        else if( task.partialTime >= 10 || task.type === \"breakdown\" ) return \"task-box__task-color_ng\";\r\n        else if( task.type === \"modelChange\" || task.type === \"cleaning\" ) return \"task-box__task-color_warning\";\r\n        else return \"\";\r\n    };\r\n    // return\r\n    const { task, columns, index } = props;\r\n    return ( \r\n        <div className={\"task-box__task \" + taskCustomCSS(task) } >\r\n            { columns.map( column => \r\n                <div key={ task._id + column.path } className={ utils.getCustomTaskCss(column.path, \"task\") }>\r\n                    { renderContent(task, column, index)}\r\n                </div>\r\n            )}\r\n        </div>\r\n        );\r\n}\r\n \r\nexport default Task;","import React from 'react';\r\nimport Task from './showData_Task';\r\nimport { FixedSizeList } from \"react-window\";\r\nimport AutoSizer from \"react-virtualized-auto-sizer\";\r\nimport userService from '../services/userService.js';\r\nimport utils from '../services/utils';\r\n\r\nconst TaskBox = (props) => {\r\n \r\n    const columns = [\r\n        {label: \"#\", path: \"#\"},\r\n        {label: \"Zdarzenie\", path: \"content\"},\r\n        {label: \"Status\", path: \"status\"},\r\n        {label: \"Ilość\", path: \"qty\"},\r\n        {label: \"Dostarczono\", path: \"partialQty\"},\r\n        {label: \"Miejsce\", path: \"location\"},\r\n        {label: \"Czas\", path: \"time\"},\r\n    ];\r\n    const specialColumns = [\r\n        {label: \"\", path: \"take\"},\r\n        {label: \"\", path: \"btnClose\"},\r\n        {label: \"Data rejestracji\", path: \"createdInFormatedData\"},\r\n        {label: \"Obsługuje\", path: \"takedBy\"},\r\n        {label: \"\", path: \"btnDelete\"}\r\n    ];\r\n\r\n    function isServiceMode_jobName(jobName){\r\n        if(jobName === \"Koordynator\") return userService.getUserJobValue(props.serviceMode_jobName) >= userService.getUserJobValue(jobName);\r\n        return props.serviceMode_jobName === jobName;\r\n    }\r\n\r\n    function getFilterData_byLocation(data){\r\n        const { currentLocation } = props;\r\n        if(currentLocation.category === \"Magazyn\") return data\r\n        else if(currentLocation.category === \"Utrzymanie ruchu\") return data.filter( item => item.type === \"breakdown\")\r\n        else return data.filter( item => item.location === currentLocation.name);\r\n    };\r\n\r\n    function getFilteredData_bySortingStatus(data){\r\n        let { currentSortingStatus } = props;\r\n        if(currentSortingStatus === \"All\") return data;\r\n        return data.filter( item => item.isDone === currentSortingStatus);\r\n    };\r\n    function getFilteredColumns(){\r\n        let filteredColumns = [ ...columns];\r\n        const { currentLocation } = props;\r\n        filteredColumns.push( specialColumns[3] )\r\n        if( !props.serviceMode ? userService.isCurrentUserEqualTo(\"Magazynier\") : isServiceMode_jobName(\"Magazynier\") ) filteredColumns.push( specialColumns[0]);\r\n        if( !props.serviceMode ? userService.isCurrentUserEqualTo(\"Operator\") : isServiceMode_jobName(\"Operator\") ) filteredColumns.push( specialColumns[1]);\r\n        if( currentLocation.category !== \"Utrzymanie ruchu\")\r\n            if( !props.serviceMode ? userService.isCurrentUserGreaterThanORequalTo(\"Koordynator\") : isServiceMode_jobName(\"Koordynator\") ) filteredColumns.push( specialColumns[2] );\r\n        if( props.deleteTaskMode ){\r\n            filteredColumns.push( specialColumns[1]);\r\n            filteredColumns.push( specialColumns[4])\r\n        }\r\n                \r\n        return filteredColumns;\r\n    };\r\n    function getSortedData(){\r\n        let { data } = props;\r\n        data = getFilterData_byLocation(data);\r\n        data = getFilteredData_bySortingStatus(data);\r\n        return data;\r\n    };\r\n\r\n    function renderTaskBoxHeader(columns){\r\n        const invisibleText = props.currentLocation.name === \"UTRZYMANIE RUCHU\" ? \" invisible\" : \"\";\r\n        function isVisible(column){\r\n            return column.path === \"qty\" ? invisibleText : \"\";\r\n        }\r\n\r\n        return <div className={\"task-box__header\"}>\r\n                    { columns.map( column =>\r\n                        <div key={column.path} className={ utils.getCustomTaskCss(column.path, \"header\") + isVisible(column) }\r\n                        >{column.label}</div> ) }\r\n               </div> ;\r\n    };\r\n\r\n    function renderTasks(data, columns){\r\n        return <AutoSizer >\r\n                    {({ height, width }) => (\r\n                    <FixedSizeList\r\n                            itemData={data}\r\n                            height={height - 50}\r\n                            width={width}\r\n                            itemCount={data.length}\r\n                            itemSize={43}\r\n                        >\r\n                        {({data, index, style }) => {\r\n                            const task = data[index];\r\n                            return (\r\n                                <div style={{ ...style }}>\r\n                                <Task\r\n                                    key={task._id}\r\n                                    index={index + 1}\r\n                                    task={task}\r\n                                    columns={columns}\r\n                                    serviceMode={props.serviceMode}\r\n                                    serviceMode_jobName={props.serviceMode_jobName}\r\n                                    onhandleCloseTask={props.onhandleCloseTask}\r\n                                    onhandleTakeTask={props.onhandleTakeTask}\r\n                                    onhandlePartialDelivery={props.onhandlePartialDelivery}\r\n                                    onhandleDeleteTaskFromDataBase={props.onhandleDeleteTaskFromDataBase}\r\n                                    >\r\n                                </Task>\r\n                                </div>\r\n                        )}}\r\n                    </FixedSizeList>\r\n                    )}\r\n                </AutoSizer>\r\n    };\r\n\r\n    const data = getSortedData();\r\n    const filteredClumns = getFilteredColumns();\r\n    return ( \r\n        <div className=\"task-box\">\r\n            { renderTaskBoxHeader( filteredClumns ) }\r\n            { renderTasks(data, filteredClumns) }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskBox;\r\n","import React from 'react';\r\n\r\nconst Loader = () => {\r\n    return <div className=\"common__loader_box\">\r\n                <div className=\"common__loader_box_loader\"></div>\r\n            </div>\r\n}\r\n \r\nexport default Loader;","import httpService from \"./httpService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst apiEndPoint = \"/tasks\";\r\n\r\nexport async function getTasks(){\r\n    try{\r\n        const { data } = await httpService.get(apiEndPoint);\r\n        return data;\r\n    }catch(ex){\r\n        if(ex && ex.response) toast.error(ex.response.data)\r\n        else toast.error(\"Nie można uzyskać danych o zdarzeniach.\")\r\n    }\r\n}\r\n\r\nexport async function addTask(task){\r\n    const { data } = await httpService.post(apiEndPoint, task);\r\n    return data;\r\n}\r\nexport async function updateTask(taskToUpdate){\r\n    const { data } = await httpService.put(apiEndPoint + \"/\" + taskToUpdate._id, taskToUpdate );\r\n    return data;\r\n}\r\nexport async function deleteteTask(taskToUpdate){\r\n    const { data } = await httpService.delete(apiEndPoint + \"/\" + taskToUpdate._id );\r\n    return data;\r\n}\r\n\r\nexport default {\r\n    getTasks,\r\n    addTask,\r\n    updateTask,\r\n    deleteteTask\r\n}","import React, { Component } from 'react';\r\nimport ShowDataHeader from './showData_Header';\r\nimport localisationService from '../services/localisationService';\r\nimport SortingButtons from './showData_SortingButtons';\r\nimport LogoutButtonBox from './logoutButtonBox';\r\nimport TaskBox from './showData_TaskBox';\r\nimport Loader from './common/loader';\r\nimport taskService from '../services/taskService';\r\nimport userService from '../services/userService';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass ShowData extends Component {\r\n      state = {\r\n            data: [], /// musi tu być a nie w TaskBox, bo funkcja addTask jest w showdataHeader\r\n            currentSortingStatus: false, // oznacza, który przycisk ma się wyświetlić jako domyślny / bieżący\r\n            currentLocalisation: { name: \"\" },\r\n            validLocalisations: [],\r\n            deleteTaskMode: false,\r\n            serviceMode: false,\r\n            serviceMode_jobName: \"Admin\"\r\n      };\r\n      isSupervisor = userService.isCurrentUserGreaterThanORequalTo(\"Koordynator\");\r\n\r\n      async componentDidMount(){\r\n            this.redirectIfNeeded();\r\n            try{\r\n                  const data = await taskService.getTasks();\r\n                  const validLocalisations = await localisationService.getVerifiedUserLocalisations();\r\n                  const currentLocalisation = this.getCurrentLocalisation(validLocalisations);\r\n                  this.setState({ data, validLocalisations, currentLocalisation });\r\n            }catch(ex){\r\n                  if(ex && ex.response) toast.error(\"Problem z pobraniem danych z serwera.\")\r\n            }\r\n            this.set_Interval_ToRefreshData()// uruchomienie odświeżania danych\r\n      };\r\n      componentWillUnmount(){\r\n            this.mounted = false;\r\n            clearInterval( this.run_interval_refreshData );\r\n      };\r\n\r\n      // handlers\r\n      handleChangeDeleteTaskMode = () => {\r\n            let { deleteTaskMode } = this.state;\r\n            deleteTaskMode = !deleteTaskMode;\r\n            this.setState({ deleteTaskMode });\r\n      }\r\n      handleChangeSortingStatus = currentSortingStatus => {\r\n            this.setState({ currentSortingStatus });\r\n      };\r\n      handleChangeServiceMode = () => {\r\n            this.setState({ serviceMode: !this.state.serviceMode, serviceMode_jobName: userService.getUserFromJWT().job })\r\n      };\r\n      handleChangeServiceModeJob = serviceMode_jobName => {\r\n            this.setState({ serviceMode_jobName })\r\n      };\r\n      handleChangeCurrentLocation = currentLocalisation => {\r\n            this.setState({ currentLocalisation });\r\n      }\r\n      handleAddTask = async (task) => {\r\n            task.location = this.state.currentLocalisation.name;\r\n            task.createdBy = userService.getUserFromJWT().name;\r\n            const newTask = await taskService.addTask(task);\r\n            this.updateTaskList(newTask);\r\n      }\r\n      handleDeleteTaskFromDataBase = async (taskToDelete) => {\r\n            const task = await taskService.deleteteTask(taskToDelete);\r\n            this.updateTaskList(task);\r\n      }\r\n      handleCloseTask = async (task) => {\r\n            const arrayOfUpdateDetails = [\r\n                  {property: \"isDone\", value: true },\r\n                  {property: \"closedBy\", value: userService.getUserFromJWT().name}\r\n            ]\r\n            this.handleUpdateTask(task, arrayOfUpdateDetails);\r\n      };\r\n      handleTakeTask = async (task) => {\r\n            const arrayOfUpdateDetails = [ {property: \"takedBy\", value: userService.getUserFromJWT().name} ]\r\n            this.handleUpdateTask(task, arrayOfUpdateDetails);\r\n      };\r\n      handlePartialDelivery = async (task) => { // usunąć async\r\n            const arrayOfUpdateDetails = [\r\n                  {property: \"partialQty\", value: task.partialQty },\r\n                  {property: \"partialTime\", value: 0 }\r\n            ]\r\n            this.handleUpdateTask(task, arrayOfUpdateDetails);\r\n      }\r\n      handleUpdateTask = async (task, arrayOfUpdateDetails ) => {\r\n            arrayOfUpdateDetails.forEach( t => task[t.property] = t.value );\r\n            task = await taskService.updateTask(task);\r\n            const data = [ ...this.state.data ];\r\n            let index = data.findIndex( t => t._id === task._id);\r\n            data[index] = task;\r\n            this.setState( { data })\r\n      }\r\n      // services\r\n      set_Interval_ToRefreshData(){\r\n            this.mounted = true;\r\n            this.run_interval_refreshData();\r\n      };\r\n      run_interval_refreshData(){\r\n            setInterval( async () => {\r\n            if(this.mounted) this.setState({ data: await taskService.getTasks() }); }, 10000)\r\n      };\r\n      async redirectIfNeeded(){\r\n            const seletedLocalisation = await localisationService.getSelectedLocalisation(this.props.match.params.id);\r\n            if( !seletedLocalisation && !this.isSupervisor ) window.location = \"/select-localisation\";\r\n      };\r\n      getCurrentLocalisation(validLocalisations){\r\n            const localisationFromPathname = validLocalisations.filter( vl => vl.path === this.props.location.pathname );\r\n            return localisationFromPathname[0] ? localisationFromPathname[0] : validLocalisations[0];\r\n      }\r\n      updateTaskList(task){\r\n            let { data } = { ...this.state };\r\n            const index = data.findIndex( t => t._id === task._id );\r\n            if(index === -1) data.unshift(task);\r\n            else data.splice(index, 1);\r\n            this.setState({ data })\r\n      }\r\n      \r\n      // render\r\n      render() { \r\n            const { currentLocalisation, currentSortingStatus, validLocalisations, data,\r\n                  deleteTaskMode, serviceMode, serviceMode_jobName } = this.state;\r\n            return ( \r\n                  <React.Fragment>\r\n                        <ShowDataHeader\r\n                              currentLocation={currentLocalisation}\r\n                              validLocations={validLocalisations}\r\n                              serviceMode={serviceMode}\r\n                              serviceMode_jobName={serviceMode_jobName}\r\n                              onChangeCurrentLocation={this.handleChangeCurrentLocation}\r\n                              onhandleAddTask={this.handleAddTask}\r\n                              onhandleChangeServiceMode = {this.handleChangeServiceMode}\r\n                              onhandleChangeServiceModeJob={this.handleChangeServiceModeJob}\r\n                              />\r\n                        {data && data.length === 0 && <Loader /> }\r\n                        {data && data &&\r\n                        <div className=\"app__content\">\r\n                              <div className=\"app__container-buttons\">\r\n                                    <SortingButtons \r\n                                          currentSortingStatus={ currentSortingStatus }\r\n                                          deleteTaskMode={ deleteTaskMode }\r\n                                          onChangeSortingStatus={ this.handleChangeSortingStatus }\r\n                                          onhandleChangeDeleteTaskMode={ this.handleChangeDeleteTaskMode }\r\n                                          />\r\n                                    <LogoutButtonBox />\r\n                              </div>\r\n                                    <TaskBox\r\n                                          data={data}\r\n                                          currentLocation={ currentLocalisation }\r\n                                          currentSortingStatus={ currentSortingStatus }\r\n                                          deleteTaskMode={ deleteTaskMode }\r\n                                          serviceMode={serviceMode}\r\n                                          serviceMode_jobName={serviceMode_jobName}\r\n                                          onhandleCloseTask={this.handleCloseTask}\r\n                                          onhandleTakeTask={this.handleTakeTask}\r\n                                          onhandlePartialDelivery={this.handlePartialDelivery}\r\n                                          onhandleDeleteTaskFromDataBase={this.handleDeleteTaskFromDataBase}\r\n                                          />\r\n                        </div>\r\n                        }\r\n                  </React.Fragment>\r\n            );\r\n      }\r\n}\r\n \r\nexport default ShowData;","import httpService from \"./httpService\";\r\nimport { toast } from \"react-toastify\";\r\nimport filesaver from 'file-saver';\r\n\r\nconst apiEndPoint = \"/getExcelFile\";\r\n\r\nexport async function getTasksInExcelFile(){\r\n    try{\r\n        const fileName = getFileName();\r\n        const {data} = await httpService.get(apiEndPoint, { responseType: 'arraybuffer' });\r\n        const blob = new Blob([data], {type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet; base64'} )\r\n        filesaver.saveAs(blob, fileName);\r\n    }catch(ex){ toast.error(\"Nie można ściągnąć pliku.\") }\r\n}\r\n\r\n\r\nfunction getFileName(){\r\n\tconst timeOnServer_GMT0 = new Date().getTime();\r\n\tconst timeOffset_Poland = -120;\r\n    const localTimeInPoland = timeOnServer_GMT0-timeOffset_Poland * 60*1000; // local Time in Poland\r\n    const date = new Date(localTimeInPoland).toISOString();\r\n    const day =  date.slice(0,10);\r\n    const hour =  date.slice(11,13);\r\n    const minutes =  date.slice(14,16);\r\n    const seconds =  date.slice(17,19);\r\n    return  \"FILMAG-Wykaz zdarzeń - \" + day + \"-\" + hour + minutes + seconds + \".xlsx\";\r\n}\r\n\r\nexport default {\r\n    getTasksInExcelFile\r\n}\r\n","import React from 'react';\r\nimport MenuMainItem from './common/menuMainItem.js';\r\nimport MenuItems from './common/menuItems.js';\r\nimport userService from '../services/userService';\r\nimport taskToExcellFileService from '../services/taskToExcelService';\r\n\r\nfunction getTaskInExcelFile() {\r\n    taskToExcellFileService.getTasksInExcelFile();\r\n}\r\n                   \r\n\r\nconst SettingsHeader = ({ validLocations }) => {\r\n    const isSupervisor = userService.isCurrentUserGreaterThanORequalTo(\"Koordynator\");\r\n\r\n    return ( \r\n        <header className=\"app__header\">\r\n            <div className=\"app__header-title\">Ustawienia</div>\r\n            <div className=\"app__header-barIcon\" >\r\n                <i className=\"fa fas fa-bars fa-3x\"></i>\r\n                <ul className=\"app__header-menu\">\r\n                    <MenuMainItem label=\"Wyświetl zdarzenia\" path=\"/show-data\" icon=\"fa-align-justify\" />\r\n                    { isSupervisor && <MenuItems items={ validLocations } action={ () => {return null} } /> }\r\n                    { isSupervisor && <li className=\"app__header-menu_item app__header-menu_item-option\" onClick={ getTaskInExcelFile }><i className=\"fa fa-download\"></i>Pobierz zdarzenia do excel</li> }\r\n                </ul>\r\n            </div>\r\n        </header>\r\n        );\r\n}\r\n \r\nexport default SettingsHeader;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LinkWithButton = ({label, path, css = \"btn btn-secondary btn-sm\"}) => {\r\n    return ( \r\n        <Link to={ path } >\r\n            <button className={css}>{ label }</button>\r\n        </Link>\r\n     );\r\n}\r\n \r\nexport default LinkWithButton;","import React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport Joi from 'joi-browser';\r\nimport ConfirmAlertInput from './common/confirmAlertInput.js';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass ConfirmAlertSettings extends ConfirmAlertInput {\r\n    state = { item: { name: \"\" } };\r\n\r\n    schema = {\r\n      name: Joi.string().required().error( () => {return { message: this.errorMessages[\"name\"]};}),\r\n    };\r\n\r\n    errorMessages = {\r\n      name: 'Nazwa nie może być pusta.'\r\n    }\r\n    doSubmit(onClose){\r\n      const {item} = this.state;\r\n      const error = this.validate(item);\r\n      if(error) { toast.error(error); return null; }\r\n      this.props.form.action(item);\r\n      onClose();\r\n  }\r\n    submit = () => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n              const { title, p_label } = this.props.form;\r\n              return (\r\n                <div className=\"confirmAlertInput\">\r\n                  <h1>{title}</h1>\r\n                  <div className=\"confirmAlertInput__input-box\">\r\n                      {this.renderInputBoxGroup(p_label, \"name\", \"text\", \"Podaj dane\", onClose, \"autoFocus\")}\r\n                  </div>\r\n                  <div className=\"confirmAlertInput__button-group\">\r\n                      {this.renderButton(\"Dodaj\", () => this.doSubmit(onClose) ) }\r\n                      {this.renderButton(\"Anuluj\", onClose ) }\r\n                  </div>\r\n                </div>\r\n              )\r\n            } })\r\n      };\r\n    \r\n    render() { \r\n        const { btn_css, btn_label } = this.props.form;\r\n        return this.renderButton(btn_label, this.submit, btn_css ) ;\r\n    }\r\n}\r\n\r\nexport default ConfirmAlertSettings;","import React from 'react';\r\n\r\nconst InputCustomSelect = ({ options, currentValue, item, isDisabled = false, onChange, selectOptions }) => {\r\n    const selectedOptions = selectOptions ? selectOptions(options, currentValue) : options;\r\n    return ( \r\n        <div className=\"\">\r\n            <select className=\"custom-select\" \r\n                name={item}\r\n                onChange={ onChange}\r\n                value = {currentValue}\r\n                disabled={ isDisabled }\r\n                >\r\n                {selectedOptions.map(option => <option key={option.name} disabled={option.isDisabled} className=\"a\" value={ option.value }>{option.name}</option>)}\r\n            </select>\r\n        </div> \r\n     );\r\n}\r\n \r\nexport default InputCustomSelect;","import React from 'react';\r\n\r\nconst CustomCheckBox = ({ action, item, isChecked, isDisabled = false }) => {\r\n\r\n    const faClass = isChecked ? \"fa fas fa-check fa-check-yes\" : \"fa fas fa-check fa-check-no\"\r\n    return <button\r\n                className=\"btn\"\r\n                disabled = { isDisabled }\r\n                onClick={ () => action(item) }\r\n                >\r\n              <i className={faClass} > </i> \r\n          </button>\r\n}\r\n \r\nexport default CustomCheckBox;","import React, { Component } from 'react';\r\nimport LinkWithButton from './common/linkWithButton.js';\r\nimport ConfirmAlert from './common/confirmAlert.js';\r\nimport ConfirmAlertSettings from './confirmAlertSettings';\r\nimport LogoutButtonBox from './logoutButtonBox';\r\nimport InputCustomSelect from './common/inputCustomSelect.js';\r\nimport CustomCheckBox from './common/customCheckBox.js';\r\nimport userService from '../services/userService';\r\nimport { toast } from 'react-toastify';\r\nimport Joi from 'joi-browser';\r\n\r\nclass SettingsUsers extends Component {\r\n    state = { \r\n        users: [],\r\n        };\r\n\r\n    form_deleteUser = {\r\n        title: \"Potwierdź usunięcie konta\",\r\n        btn_label: <p><span className=\"user__content_btn-label_full\">Usuń konto</span><span className=\"user__content_btn-label_short\">X</span></p>,\r\n        btn_css: \"btn btn-danger btn-sm\",\r\n        action: (user) => this.handleDeleteUser(user)\r\n    };\r\n    form_resetPassword = {\r\n        title: \"Resetowanie hasło\",\r\n        btn_label: <div><span className=\"user__content_btn-label_full\">Resetuj hasło</span><span className=\"user__content_btn-label_short\">R</span></div>,\r\n        message: `Resetujesz hasło użytkownika. Nowe hasło: 12345.`, \r\n        btn_css: \"btn btn-secondary btn-sm\",\r\n        action: (user) => this.handleResetPassword(user)\r\n    };\r\n    form_addteUser = {\r\n        title: \"Dodaj konto użytkownika\",\r\n        p_label: \"Login\",\r\n        btn_label: \"Dodaj nowe konto\",\r\n        btn_css: \"btn btn-success btn-sm\",\r\n        action: (user) => this.handleAddUser(user)\r\n    };\r\n    columns = [\r\n        {label: \"#\", path: \"#\"},\r\n        {label: \"Pracownik\", path: \"name\"},\r\n        {label: \"Stanowisko\", path: \"userJob\"},\r\n        {label: <i className=\"fa fas fa-desktop\"></i>, path: \"status\"},\r\n        {label:  <div><span className=\"user__content_btn-label_full\">Magazyn</span><span className=\"user__content_btn-label_short\">MG</span></div>, path: \"Magazyn\"},\r\n        {label:  <div><span className=\"user__content_btn-label_full\">Maszyny</span><span className=\"user__content_btn-label_short\">MS</span></div>, path: \"Maszyny\"},\r\n        {label:  <div><span className=\"user__content_btn-label_full\">Utrzymanie ruchu</span><span className=\"user__content_btn-label_short\">UR</span></div>, path: \"Utrzymanie ruchu\"},\r\n        {label: \"\", path: \"btn-reset\"}\r\n    ];\r\n    \r\n    options = [\r\n        {name: \"Operator\" },\r\n        {name: \"Magazynier\" },\r\n        {name: \"Prac. utrz. ruchu\" },\r\n        {name: \"Koordynator\" },\r\n        {name: \"Mistrz\" },\r\n        {name: \"Kierownik\" },\r\n        {name: \"Dyrektor\" },\r\n        {name: \"Prezes\" },\r\n        {name: \"Admin\" },\r\n        {name: \"SuperAdmin\" }\r\n    ];\r\n    schema = {\r\n        name: Joi.string().min(5).required().error( () => {return { message: \"Podana nazwa jest za krótka. Minimum to 5 znaków.\"};}),\r\n        password: Joi.string().min(5).required().error( () => {return { message: \"Podane hasło jest za krótkie. Minimum to 5 znaków.\"};})\r\n    };\r\n    \r\n    constructor(){\r\n        super();\r\n        const isAdmin = userService.isCurrentUserGreaterThanORequalTo(\"Admin\");\r\n        if( isAdmin ) this.columns.push( {label: \"\", path: \"btn-delete\" } )\r\n    };\r\n    \r\n    async componentDidMount(){\r\n        this.setState({ users: await userService.getUsers() });\r\n    };\r\n    \r\n    handleDeleteUser = async (userToDelete) => {\r\n        try{\r\n            const user = await userService.deleteUser(userToDelete);\r\n            let users = [ ...this.state.users ];\r\n            const index = users.findIndex(u => u._id === user._id);\r\n            if(index < 0) return;\r\n            users.splice(index, 1)\r\n            this.setState({ users });\r\n        }catch(ex){\r\n            if(ex && ex.response) toast.error(ex.response.data)\r\n        }\r\n    };\r\n\r\n    handleAddUser = async newUser => {\r\n        try{\r\n            let user = {name: newUser.name, password: \"12345\"}\r\n            const error = this.validateNewUser(user);\r\n            if(error) { toast.error(error); return null; }\r\n\r\n            user = await userService.addUser( user );\r\n            let users = [ ...this.state.users ];\r\n            users.unshift(user);\r\n            this.setState({ users });\r\n        }catch(ex){\r\n            if(ex && ex.response) toast.error(ex.response.data)\r\n        }\r\n    };\r\n\r\n    handleResetPassword = async user => {\r\n        try{\r\n            await userService.resetUserPassword( {_id: user._id, password:  \"12345\"} );\r\n            toast.info(\"Zmieniono hasło użytkownika.\")\r\n        }\r\n        catch (ex) {\r\n            if(ex && ex.response) toast.error(ex.response.data);\r\n        }\r\n\r\n    };\r\n\r\n    validateNewUser(user){\r\n        const { error } = Joi.validate(user, this.schema);\r\n        return error ? error.details[0].message : null;\r\n    };\r\n    updateUserPermissions = async ( {userN, area} ) => {\r\n        let user = this.chamgeUserPermisions( userN, area );\r\n        user = await userService.updateUser(user);\r\n        let users = [ ...this.state.users ];\r\n        const index = users.findIndex(u => u._id === user._id);\r\n        users[index] = user;\r\n        this.setState({ users });\r\n    };\r\n    chamgeUserPermisions( user, area ){\r\n        const index = user.permissions.indexOf( area );\r\n        if(index >= 0) user.permissions.splice(index,1);\r\n        else user.permissions.push(area);\r\n        return user;\r\n    }\r\n    checkDisabledOptions(){\r\n        return this.options.map( option => option = {name: option.name, isDisabled: userService.isCurrentUserLessThan(option.name)} )\r\n    }\r\n    selectOptions(options, currentValue){\r\n        const isOptionButtonDissabled = userService.isCurrentUserLessThanORequalTo(currentValue);\r\n        return isOptionButtonDissabled ? options.filter( o => o.name === currentValue ) : options.filter( o => userService.isCurrentUserGreaterThan(o.name) ) ;\r\n    }\r\n    \r\n    isChecked(userPermissions, area){ return userPermissions.indexOf( area ) >= 0 };\r\n    \r\n    renderCheckBox(user, area){\r\n        const isDisbaled = !userService.isCurrentUserGreaterThan(user.job) ? true : false;\r\n        return  <CustomCheckBox \r\n                    item={ {userN: user, area} }\r\n                    isChecked={ this.isChecked(user.permissions, area) }\r\n                    isDisabled = { isDisbaled }\r\n                    action={ this.updateUserPermissions }\r\n                    />\r\n    };\r\n\r\n    \r\n    renderUserStatus(user){\r\n        return <div className=\"user__status\">\r\n                    <div className={ user.isLogged ? \"status_dot-ok\" : \"status_dot-ng\"}></div>\r\n                    <div className=\"invisible\">invisible text. Do not remove.</div>\r\n                </div>\r\n    }\r\n    renderButton(user, form){\r\n        const isDisbaled = !userService.isCurrentUserGreaterThan(user.job) ? true : false;\r\n        return <ConfirmAlert \r\n                    item ={user}\r\n                    itemRepresentation={user.name}\r\n                    form = {form}\r\n                    disableButton = { isDisbaled }\r\n                    />\r\n    };\r\n    renderInputCustomSelect( user ) {\r\n        const isDisabled = !userService.isCurrentUserGreaterThan(user.job) ? true : false;\r\n        return <InputCustomSelect \r\n                    item = { user._id }\r\n                    currentValue = { user.job }\r\n                    isDisabled = { isDisabled }\r\n                    options = { this.checkDisabledOptions() }\r\n                    onChange = { this.handleInputOnChange }\r\n                    selectOptions = { this.selectOptions }\r\n                    />\r\n    };\r\n    handleInputOnChange = async ({ currentTarget: input }) => {\r\n        const users = [...this.state.users];\r\n        const index = users.findIndex( u => u._id === input.name);\r\n        let user = users[index];\r\n            user.job = input.value;\r\n            users[index] = await userService.updateUser(user);\r\n        this.setState({ users })\r\n    };\r\n    renderAddUserButton(){ return <ConfirmAlertSettings form={this.form_addteUser} /> };\r\n\r\n    renderCellContent = (user, column) => {\r\n        const { users } = this.state;\r\n\r\n        if(column.path === \"#\") return users.indexOf(user) + 1;\r\n        else if(column.path === \"name\") return user.name;\r\n        else if(column.path === \"userJob\") return this.renderInputCustomSelect(user);\r\n        else if(column.path === \"status\") return this.renderUserStatus(user);\r\n        else if(column.path === \"Magazyn\") return this.renderCheckBox(user, \"Magazyn\");\r\n        else if(column.path === \"Maszyny\") return this.renderCheckBox(user, \"Maszyna\");\r\n        else if(column.path === \"Utrzymanie ruchu\") return this.renderCheckBox(user, \"Utrzymanie ruchu\");\r\n        else if(!user.isDone && column.path === \"btn-reset\" ) return this.renderButton(user, this.form_resetPassword)// kolumna dla przycisku resetu hasła\r\n        else if(!user.isDone && column.path === \"btn-delete\" ) return this.renderButton(user, this.form_deleteUser) // kolumna dla przycisku usunięcia konta\r\n    };\r\n    renderHeader(columns, mainDivCSS, contentCSS ){  // podobne\r\n        return <div className={ mainDivCSS }> \r\n                    { columns.map( column => <div key={column.path} className={ contentCSS }>{column.label}</div> )}\r\n                </div>\r\n    }\r\n    renderUsers(users, mainDivCSS, wrapperCSS, contentCSS){  // podobne\r\n        return <div className={ mainDivCSS }>\r\n                    {users.map( user => \r\n                        <div key={user._id}\r\n                                className={ wrapperCSS }>\r\n                                { this.columns.map( column => \r\n                                    <div key={ user._id + column.path } className={ contentCSS }\r\n                                        >{ this.renderCellContent(user, column)}\r\n                                    </div>\r\n                                    ) }\r\n                        </div>\r\n                    )}\r\n                </div>\r\n    }\r\n    \r\n\r\n    render() { \r\n        const isAdmin = userService.isCurrentUserGreaterThanORequalTo(\"Admin\");\r\n\r\n        return ( \r\n        <div className=\"app__content\">\r\n            <div className=\"app__container-buttons\">\r\n                <div className=\"settings__switch-buttons\">\r\n                    <LinkWithButton label=\"Wyświetl zdarzenia\" path=\"/show-data\" css={\"btn btn-sm btn-primary\"} />\r\n                    <LinkWithButton label=\"Lokalizacje\" path=\"/settings/localisations\" />\r\n                    <LinkWithButton label=\"Mój profil\" path=\"/settings/user\" />\r\n                    { isAdmin && this.renderAddUserButton() }\r\n                </div>\r\n                <LogoutButtonBox />\r\n            </div>\r\n\r\n            <div className=\"users\">\r\n                { this.renderHeader(this.columns, \"user user__header\", \"user__content\") }\r\n                { this.renderUsers(this.state.users, \"user__wrapper\", \"user\", \"user__content\") }\r\n            </div>\r\n        </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default SettingsUsers;","import React, { Component } from 'react';\r\nimport LinkWithButton from './common/linkWithButton.js';\r\nimport ConfirmAlert from './common/confirmAlert.js';\r\nimport ConfirmAlertSettings from './confirmAlertSettings';\r\nimport InputCustomSelect from './common/inputCustomSelect.js';\r\nimport LogoutButtonBox from './logoutButtonBox';\r\nimport userService from '../services/userService';\r\nimport localisationService from '../services/localisationService';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass SettingsLocalisations extends Component {\r\n    state = { \r\n        localisations: []\r\n     };\r\n        \r\n    columns = [\r\n        {label: \"#\", path: \"#\"},\r\n        {label: \"Nazwa\", path: \"name\"},\r\n        {label: \"Kategoria\", path: \"category\"}\r\n    ];\r\n    options = [\r\n        {name:\"\", value: \"\"},\r\n        {name: \"Magazyn\", value: \"Magazyn\"},\r\n        {name: \"Maszyna\", value: \"Maszyna\"},\r\n        {name: \"Utrzymanie ruchu\", value: \"Utrzymanie ruchu\"}\r\n    ];\r\n    form_confirmAlert = {\r\n        title: 'Potwierdź usunięcie lokalizacji',\r\n        btn_label: <p><span className=\"localisation__content_btn-label_full\">Usuń lokalizację</span><span className=\"localisation__content_btn-label_short\">X</span></p>,\r\n        btn_css: \"btn-danger btn-sm\",\r\n        action: (localisation) => this.handleDeleteLocalisation(localisation)\r\n    };\r\n    form_addLocalisation = {\r\n        title: \"Dodaj nową lokalizację\",\r\n        p_label: \"Nazwa\",\r\n        btn_label: \"Dodaj nową lokalizację\",\r\n        btn_css: \"btn btn-success btn-sm\",\r\n        action: (localisation) => this.handleAddLocalisation(localisation)\r\n    };\r\n\r\n    constructor(){\r\n        super();\r\n        const isAdmin = userService.isCurrentUserGreaterThanORequalTo(\"Admin\");\r\n        if( isAdmin ) this.columns.push( {label: \"\", path: \"btn-delete\" } )\r\n    }\r\n    async componentDidMount(){\r\n        this.setState({ localisations: await localisationService.getLocalisations() })\r\n    };\r\n\r\n    handleDeleteLocalisation = async (localisationToDelete) => {\r\n        try{\r\n            const localisation = await localisationService.deleteLocalisation(localisationToDelete);\r\n            let { localisations } = this.state;\r\n            const index = localisations.findIndex(l => l._id === localisation._id);\r\n            if(index < 0) return;\r\n            localisations.splice(index, 1)\r\n            this.setState({ localisations });\r\n        }catch(ex){\r\n            if(ex && ex.response) toast.error(ex.response.data)\r\n        }\r\n    };\r\n    handleAddLocalisation = async localisation => {\r\n        try{\r\n            if(!localisation.name) {\r\n                toast.error(\"Nie dodano nowej lokalizacji. Nazwa nie może być pusta.\");\r\n                return null;\r\n            }\r\n            const newLocalisation = await localisationService.addLocalisation(localisation);\r\n            let { localisations } = { ...this.state };\r\n            localisations.unshift(newLocalisation);\r\n            this.setState({ localisations });\r\n        }catch(ex){\r\n            if(ex && ex.response) toast.error(ex.response.data)\r\n        }\r\n    };\r\n    renderInputCustomSelect( localisation ) {\r\n        return <InputCustomSelect \r\n                    item={localisation._id}\r\n                    currentValue={localisation.category}\r\n                    options={this.options}\r\n                    onChange={this.handleInputOnChange}\r\n                    />\r\n    };\r\n\r\n    handleInputOnChange = async ({ currentTarget: input }) => {\r\n        try{\r\n            const localisations = [...this.state.localisations];\r\n            const index = localisations.findIndex( l => l._id === input.name);\r\n            let localisation = localisations[index];\r\n                localisation.category = input.value;\r\n                localisations[index] = await localisationService.updateLocalisation(localisation);\r\n            this.setState({ localisations })\r\n        }catch(ex){\r\n            if(ex && ex.response) toast.error(ex.response.data)\r\n        }\r\n    };\r\n    \r\n    renderCellContent = (localisation, column) => {\r\n        const { localisations } = this.state;\r\n        const form_confirmAlert = this.form_confirmAlert;\r\n        if(column.path === \"#\") return localisations.indexOf(localisation) + 1;// kolumna dla lp.\r\n        else if(column.path === \"name\") return localisation.name// kolumna zaznaczania czy lokalizacja widzi wszystko\r\n        else if(column.path === \"category\") return this.renderInputCustomSelect(localisation)// kolumna zaznaczania czy lokalizacja widzi wszystko\r\n        else if(column.path === \"btn-delete\" ) return this.renderConfirmAlert(localisation, form_confirmAlert) // kolumna dla przycisku\r\n    };\r\n\r\n    renderConfirmAlert(area, form){\r\n        return <ConfirmAlert \r\n                    item = {area}\r\n                    itemRepresentation = {area.name}\r\n                    form = {form}\r\n                    />\r\n    };\r\n    \r\n    renderAddLocalisationButton(){ return <ConfirmAlertSettings form={this.form_addLocalisation} /> };\r\n  \r\n    renderHeader(columns, mainDivCSS, contentCSS ){  // podobne\r\n        return <div className={ mainDivCSS }> \r\n                    { columns.map( column => <div key={column.path} className={ contentCSS }>{column.label}</div> )}\r\n                </div>\r\n    }\r\n    \r\n    renderLocalisations(items, mainDivCSS, itemCSS, contentCSS){  // podobne\r\n        return <div className={ mainDivCSS }>\r\n                    {items.map( user => \r\n                        <div key={user._id}\r\n                                className={ itemCSS }>\r\n                                { this.columns.map( column => \r\n                                    <div key={ user._id + column.path } className={ contentCSS }\r\n                                        >{ this.renderCellContent(user, column)}\r\n                                    </div>\r\n                                    ) }\r\n                        </div>\r\n                    )}\r\n                </div>\r\n    }\r\n     render() { \r\n        const isAdmin = userService.isCurrentUserGreaterThanORequalTo(\"Admin\");\r\n\r\n        return ( \r\n        <div className=\"app__content\">\r\n            <div className=\"app__container-buttons\">\r\n                <div className=\"settings__switch-buttons\">\r\n                    <LinkWithButton label=\"Wyświetl zdarzenia\" path=\"/show-data\" css={\"btn btn-sm btn-primary\"} />\r\n                    <LinkWithButton label=\"Użytkownicy\" path=\"/settings/users\" />\r\n                    <LinkWithButton label=\"Mój profil\" path=\"/settings/user\" />\r\n                    { isAdmin && this.renderAddLocalisationButton() }\r\n                </div>\r\n                <LogoutButtonBox />\r\n            </div>\r\n            <div className=\"localisations\">\r\n                { this.renderHeader(this.columns, \"localisation localisation__header\", \"localisation__content\") }\r\n                { this.renderLocalisations(this.state.localisations, \"localisation__wrapper\", \"localisation\", \"localisation__content\") }\r\n            </div>\r\n        </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default SettingsLocalisations;","import React, { Component } from 'react';\r\nimport LinkWithButton from './common/linkWithButton.js';\r\nimport userService from '../services/userService';\r\nimport ConfirmAlertSettings from './confirmAlertSettings';\r\nimport LogoutButtonBox from './logoutButtonBox';\r\nimport { toast } from 'react-toastify';\r\nimport Joi from 'joi-browser';\r\n\r\nclass UserPage extends Component {\r\n    state = { \r\n        user: {}\r\n    }\r\n    \r\n    form_resetPassword = {\r\n        title: \"Zmień hasło\",\r\n        p_label: \"Hasło\",\r\n        btn_label: \"Zmień hasło\",\r\n        btn_css: \"btn btn-outline-danger btn-sm\",\r\n        action: (pwd) => this.handleResetPassword(pwd)\r\n    };\r\n    schema = {\r\n        password: Joi.string().min(5).required().error( () => {return { message: \"Podane hasło jest za krótkie. Minimum to 5 znaków.\"};})\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const user = userService.getUserFromJWT();\r\n        this.setState({ user });\r\n    };\r\n\r\n    async handleResetPassword({ name: newPassword }){\r\n        let user = { ...this.state.user };\r\n        user.password = newPassword;\r\n        const error = this.validateNewPassword({password: newPassword}, this.schema);\r\n        if(error) { \r\n            toast.error(error);\r\n            return null;\r\n         }\r\n        user = await userService.resetUserPassword(user);\r\n        toast.success(\"Zaktualizowano hasło\");\r\n        this.setState({ user })\r\n    };\r\n    validateNewPassword(user){\r\n        const { error } = Joi.validate(user, this.schema);\r\n        return error ? error.details[0].message : null;\r\n    };\r\n\r\n\r\n    renderSettingsNavigationButtons(){\r\n        return  <div className=\"settings__switch-buttons\">\r\n                    <LinkWithButton label=\"Wyświetl zdarzenia\" path=\"/show-data\" css={\"btn btn-sm btn-primary\"} />\r\n                    <LinkWithButton label=\"Użytkownicy\" path=\"/settings/users\" />\r\n                    <LinkWithButton label=\"Lokalizacje\" path=\"/settings/localisations\" />\r\n                </div>\r\n    };\r\nrenderReturnButton(){\r\n    return <button className=\"btn btn-primary btn-sm\" onClick={ this.props.history.goBack }>Powróć do wybranej lokalizacji</button>\r\n}\r\n    render() { \r\n        const { permissions, name: userName } = userService.getUserFromJWT();\r\n        const isSupervisor = userService.isCurrentUserGreaterThanORequalTo(\"Koordynator\");\r\n        const validLocalisations = permissions.length > 0 ? permissions.join(', ') : \"Brak uprawnień.\";\r\n        return ( \r\n        <div className=\"app__content\">\r\n\r\n            <div className=\"app__container-buttons\">\r\n                { !isSupervisor && this.renderReturnButton() }\r\n                { isSupervisor && this.renderSettingsNavigationButtons() }\r\n                <div></div>\r\n                <LogoutButtonBox />\r\n            </div>\r\n\r\n            <div className=\"settings__user-page\">\r\n                <div className=\"settings__user-page_user_box\">\r\n                    <h2>Profil użytkownika</h2>\r\n                    \r\n                    <div className=\"settings__user-page_user_box__info-box\">\r\n                        <div className=\"settings__user-page_user_box__info-box_group\">\r\n                            <p>Login:</p>\r\n                            <div>{ userName }</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"settings__user-page_user_box__info-box_group\">\r\n                        <p>Hasło :</p>\r\n                        <div><ConfirmAlertSettings form={this.form_resetPassword} /></div>\r\n                    </div>\r\n\r\n                    <div className=\"settings__user-page_user_box__info-box\">\r\n                        <div className=\"settings__user-page_user_box__info-box_permissions\">\r\n                            <p>Masz dostęp do lokalizacji typu:</p>\r\n                            <div>- { validLocalisations }.</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n         );\r\n    }\r\n}\r\n \r\nexport default UserPage;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport userService from '../../services/userService';\r\n\r\nconst ProtectedRoute = ({ path, requireUserLevel, redirectPath, component: Component, render, ...rest }) => {\r\n    const user = userService.getUserFromJWT();\r\n    if(!user) return <Redirect to={redirectPath} />\r\n    const accessDenied =  userService.isCurrentUserLessThan(requireUserLevel);\r\n    return ( \r\n        <Route path={path} {...rest}\r\n               render={ props => { \r\n                    if( accessDenied ) return <Redirect to={redirectPath} />\r\n                    return Component ? <Component {...props} /> : render(props);\r\n                }}\r\n        />\r\n    )\r\n};\r\n \r\nexport default ProtectedRoute;","import React from 'react';\r\nimport { Switch, Redirect } from 'react-router-dom';\r\nimport SettingsHeader from './settings_Header';\r\nimport SettingsUsers from './settings_Users';\r\nimport SettingsLocalisations from './settings_Localisations';\r\nimport UserPage from './settings_User';\r\nimport ProtectedRoute from './common/ProtectedRoute.js';\r\n\r\nconst Settings = () => {\r\n    const submenuOptions = [\r\n        { label: \"Wykaz użytkowników\", path: \"/settings/users\" },\r\n        { label: \"Wykaz lokalizacji\", path: \"/settings/localisations\" },\r\n        { label: \"Uprawnienia użytkowników\", path: \"/settings/permissions\" },\r\n        { label: \"Mój profil\", path: \"/settings/user\" }\r\n    ]\r\n    \r\n    return ( \r\n        <React.Fragment>\r\n            <SettingsHeader validLocations={ submenuOptions } />\r\n            <Switch>\r\n                <ProtectedRoute path=\"/settings/localisations\" requireUserLevel={\"Koordynator\"} component={SettingsLocalisations} redirectPath=\"/no-permissions\"/>\r\n                <ProtectedRoute path=\"/settings/users\" requireUserLevel={\"Koordynator\"} component={SettingsUsers} redirectPath=\"/no-permissions\"/>\r\n                <ProtectedRoute path=\"/settings/user\" requireUserLevel={\"Operator\"} component={UserPage} redirectPath=\"/login\"/>\r\n                <Redirect from=\"/settings\" to=\"/settings/users\" />\r\n            </Switch>\r\n        </React.Fragment>\r\n        );\r\n    }\r\n \r\nexport default Settings;","import React from 'react';\r\nimport logoEduLEAN from '../css/images/logo_eduLEAN.png';\r\nimport logoEkopak from '../css/images/logo_ekopak.png'\r\n\r\nconst Advertising = () => {\r\n    return ( \r\n        <div className=\"advertising\">\r\n            <div className=\"advertising__logo-box\">\r\n                <img src={logoEduLEAN} alt=\"logoEduLEAN\"></img>\r\n                <img src={logoEkopak} alt=\"logoEkopak\"></img>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\n\r\nexport default Advertising;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport LinkWithButton from './common/linkWithButton.js';\r\nimport LogoutButtonBox from './logoutButtonBox';\r\nimport Advertising from './advertising';\r\nimport userService from '../services/userService';\r\n\r\nconst Home = () => {\r\n    const user = userService.getUserFromJWT();\r\n    if(!user) return <Redirect to=\"/login\" />\r\n    \r\n    const isSupervisor = userService.isCurrentUserGreaterThanORequalTo(\"Koordynator\");\r\n\r\n    return ( \r\n        <React.Fragment>\r\n            <header className=\"app__header\">\r\n                <div className=\"app__header-title\">FILMAG</div>\r\n            </header>\r\n            <div className=\"app__content\">\r\n                <div className=\"app__container-buttons\">\r\n                    <div className=\"settings__switch-buttons\">\r\n                        <LinkWithButton label=\"Wyświetl zdarzenia\" path=\"/show-data\" css={\"btn btn-sm btn-primary\"} />\r\n                        { isSupervisor && <LinkWithButton label=\"Przejdź do ustawień\" path=\"/settings/users\" /> }\r\n                    </div>\r\n                    <LogoutButtonBox />\r\n                </div>\r\n                <Advertising />\r\n            </div>\r\n        </React.Fragment>\r\n     );\r\n}\r\n \r\nexport default Home;","import React, { Component } from 'react';\r\nimport LinkWithButton from './common/linkWithButton.js';\r\nimport userService from '../services/userService';\r\n\r\nclass SelectLocalisation extends Component {\r\n    state = { validLocalisations: [] };\r\n    \r\n    async componentDidMount() {\r\n        const validLocalisations = userService.getUserFromJWT().validLocalisations;\r\n        this.setState({ validLocalisations });\r\n    }\r\n    renderSelectLocalisationButtons(){\r\n        const { validLocalisations } = this.state;\r\n        const style = \"btn btn-secondary btn-sm select-localisation__valid-localiation\";\r\n        return validLocalisations.map( vl => \r\n                <LinkWithButton key={vl.name} label={vl.name} path={vl.path} css={style} /> )\r\n    }\r\n    render() { \r\n            return ( \r\n                <React.Fragment>\r\n                    <header className=\"app__header\">\r\n                        <div className=\"app__header-title\">FILMAG</div>\r\n                    </header>\r\n                    <div className=\"app__content\">\r\n                        <div className=\"select-localisation\">\r\n                            <h1>Wybierz lokalizację</h1>\r\n                            <div className=\"select-localisation__wrapper\">\r\n                                { this.renderSelectLocalisationButtons() }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n    }\r\n}\r\n \r\nexport default SelectLocalisation;","import httpService from \"./httpService\";\r\nimport axios from 'axios';\r\n\r\nconst apiEndPoint = \"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\naxios.defaults.headers.common['x-auth-token'] = getJwt();\r\n\r\nexport async function login( name, password ){\r\n    const { data: jwt } = await httpService.post(apiEndPoint + \"/\", { name: name, password: password } );\r\n    localStorage.setItem(tokenKey, jwt);\r\n    return jwt;\r\n}\r\nexport function getJwt(){\r\n    return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n    login,\r\n    getJwt,\r\n}","import React, { Component } from 'react';\r\nimport Advertising from './advertising';\r\nimport Loader from './common/loader';\r\nimport auth from '../services/authService';\r\nimport userService from '../services/userService';\r\nimport utils from '../services/utils';\r\nimport Joi from 'joi-browser';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass LoginPage extends Component {\r\n    state = { \r\n        user: {\r\n            name: \"\",\r\n            password: \"\"\r\n        },\r\n        isWaitingForSerwerResponse: false\r\n     };\r\n    \r\n    schema = {\r\n        name: Joi.string().min(1).required().error( () => {return { message: \"Za krótki login.\"};}),\r\n        password: Joi.string().min(5).required().error( () => {return { message: \"Za krótkie hasło.\"};})\r\n    };\r\n    errorMessage = \"Obecnie Twoje konto nie posiada dostępu do żadych lokalizacji. Zgłoś problem przełożonemu lub adminowi.\"\r\n\r\n    handleInputOnChange = ({ currentTarget: input }) => {\r\n        const user = {...this.state.user};\r\n        user[input.name] = input.value;\r\n        this.setState({ user })\r\n    };\r\n\r\n    handleLogin = async () => {\r\n        const { name, password } = this.state.user;\r\n        const error = this.validateUser({ name, password });\r\n        if(error) { toast.error(error); return null; }\r\n        this.runLoader(true);\r\n        try{\r\n            const jwt = await auth.login( name, password );\r\n            localStorage.setItem('token', jwt);\r\n            this.redirectUserToNextPath()\r\n        }\r\n        catch(ex){\r\n            if(ex.response && (ex.response.status === 400 || ex.response.status === 403)) {\r\n                toast.error(ex.response.data)\r\n            }\r\n            this.runLoader(false);\r\n        }\r\n    };\r\n    runLoader(mode){\r\n        let { isWaitingForSerwerResponse } = this.state;\r\n        isWaitingForSerwerResponse = mode;\r\n        this.setState({ isWaitingForSerwerResponse })\r\n    }\r\n    redirectUserToNextPath = async () => {\r\n        const userLocalisations = userService.getUserFromJWT().validLocalisations;\r\n        const isSupervisor = userService.isCurrentUserGreaterThanORequalTo(\"Koordynator\");\r\n        if( isSupervisor ) window.location = \"/show-data/\";\r\n        else if( userLocalisations.length > 1 ) window.location = \"/select-localisation/\";\r\n        else if( userLocalisations.length === 1 ) window.location = userLocalisations[0].path;\r\n        else { toast.error(this.errorMessage); return null; }\r\n    }\r\n    validateUser(user){\r\n        const { error } = Joi.validate(user, this.schema);\r\n        return error ? error.details[0].message : null;\r\n    };\r\n    renderLoginBox(){\r\n        return (\r\n            <div className=\"login-page_login_box\">\r\n                <h1>Zaloguj się</h1>\r\n                <div className=\"login-page_login_box__input-box\">\r\n                    <div className=\"login-page_login_box__input-box_group\">\r\n                        <p>Login</p>\r\n                        <input name=\"name\"\r\n                                autoComplete=\"off\"\r\n                                autoFocus\r\n                                onChange={this.handleInputOnChange}\r\n                                onKeyPress={ (target) => utils.runFunctionAfterPressEnter(target, this.handleLogin) }\r\n                        ></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"login-page_login_box__input-box\">\r\n                    <div className=\"login-page_login_box__input-box_group\">\r\n                        <p>Hasło</p>\r\n                        <input name=\"password\"\r\n                            autoComplete=\"off\"\r\n                            type=\"password\"\r\n                            onChange={this.handleInputOnChange}\r\n                            onKeyPress={ (target) => utils.runFunctionAfterPressEnter(target, this.handleLogin) }\r\n                        ></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"login-page_login_box__button-group\">\r\n                <button onClick={ this.handleLogin }\r\n                        >Zaloguj się</button>\r\n                </div>\r\n            \r\n            </div>\r\n        );\r\n    }\r\n    render() { \r\n        \r\n        return ( \r\n            <React.Fragment>\r\n                <header className=\"app__header\">\r\n                    <div className=\"app__header-title\">FILMAG</div>\r\n                </header>\r\n                <div className=\"app__content\">\r\n                    <Advertising />\r\n                    <div className=\"login-page\">\r\n                        { this.state.isWaitingForSerwerResponse && <Loader /> }\r\n                        { !this.state.isWaitingForSerwerResponse && this.renderLoginBox() }\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default LoginPage;\r\n\r\n","import React from 'react';\r\nimport UserInfoLogin from './logoutButtonBox';\r\nimport LinkWithButton from './common/linkWithButton.js';\r\n\r\nconst NoPermissions = () => {\r\n    return ( \r\n        <React.Fragment>\r\n            <header className=\"app__header\"></header>\r\n            <div className=\"app__content\">\r\n                <div className=\"app__container-buttons\">\r\n                    <div></div>\r\n                    <UserInfoLogin />\r\n                </div>\r\n                <div className=\"no-permissions-box\">\r\n                    <h2>ODMOWA DOSTĘPU</h2>\r\n                    <p>Nie posiadasz uprawnień do przeglądania zawartości tej strony.</p>\r\n                    <LinkWithButton label=\"Przejdź do wyboru lokalizacji\" path=\"/select-localisation\" />\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n     );\r\n}\r\n \r\nexport default NoPermissions;","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport jwtDecode from 'jwt-decode';\r\nimport ShowData from './components/showData';\r\nimport Settings from './components/settings';\r\nimport Home from './components/home';\r\nimport SelectLocalisation from './components/selectLocalisation';\r\nimport ProtectedRoute from './components/common/ProtectedRoute.js';\r\nimport LoginPage from './components/loginPage';\r\nimport NoPermissions from './components/noPermssions';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n// import userService from './services/userService';\r\n\r\nclass App extends Component {\r\n  state = { };\r\n\r\n  componentDidMount(){\r\n    try{\r\n      const jwt = localStorage.getItem(\"token\");\r\n      const user = jwtDecode(jwt);\r\n      this.setState({ user });\r\n      // window.addEventListener(\"onbeforeunload\", this.logoutUserWhenLeave);\r\n  \r\n    }\r\n    catch (ex) {} // ignoruj brak tokenu\r\n  }\r\n\r\n  // logoutUserWhenLeave = e => {\r\n  //   e.preventDefault();\r\n  //   userService.logoutUser();\r\n  // };\r\n  \r\n  render() {\r\n    document.title = \"FILMAG\";\r\n    return (\r\n        <div className=\"App\">\r\n            <ToastContainer />\r\n            <Switch>\r\n              <ProtectedRoute path=\"/show-data/:id\" requireUserLevel={\"Operator\"} redirectPath=\"/login\" component={ShowData}/>\r\n              <ProtectedRoute path=\"/show-data\" requireUserLevel={\"Operator\"} redirectPath=\"/login\" component={ShowData}/>\r\n              <ProtectedRoute path=\"/select-localisation\" requireUserLevel={\"Operator\"} redirectPath=\"/login\" component={SelectLocalisation}/>\r\n              <ProtectedRoute path=\"/settings\" requireUserLevel={\"Operator\"} redirectPath=\"/no-permissions\" component={Settings}/>\r\n              <ProtectedRoute path=\"/no-permissions\" requireUserLevel={\"Operator\"} redirectPath=\"/login\" component={NoPermissions}/>\r\n              <Route path=\"/login\" component={LoginPage} />\r\n              <Route path=\"/\" component={Home} />\r\n            </Switch>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './main.css';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter >\r\n        <App />\r\n    </BrowserRouter>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}